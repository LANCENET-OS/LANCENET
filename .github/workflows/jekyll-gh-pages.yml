# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write  # Changed to 'write' so we can commit deletions
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  delete_old_rar:
    name: Delete Old .rar Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Delete all old .rar files
        run: |
          # Find and delete all .rar files
          OLD_RAR_FILES=$(find . -name "*.rar")
          if [ -n "$OLD_RAR_FILES" ]; then
            echo "Deleting old .rar files: $OLD_RAR_FILES"
            find . -name "*.rar" -exec rm {} +
          else
            echo "No .rar files found to delete."
          fi

      - name: Commit the deletion
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Delete old .rar files" || echo "No changes to commit."

  rename_rar:
    name: Rename Incoming .rar File
    runs-on: ubuntu-latest
    needs: delete_old_rar
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Rename incoming .rar file to 'currentbuild.(thisdate).zip'
        run: |
          # Find the incoming .rar file
          INCOMING_RAR_FILE=$(find . -name "*.rar" | head -n 1)
          if [ -n "$INCOMING_RAR_FILE" ]; then
            # Get the current date
            CURRENT_DATE=$(date +"%Y%m%d")
            # Rename the file
            NEW_FILE_NAME="currentbuild.$CURRENT_DATE.zip"
            echo "Renaming $INCOMING_RAR_FILE to $NEW_FILE_NAME"
            mv "$INCOMING_RAR_FILE" "$NEW_FILE_NAME"
          else
            echo "No .rar file found to rename."
          fi

      - name: Commit the renamed file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Rename .rar file to currentbuild.zip" || echo "No changes to commit."

  build:
    name: Build Job
    runs-on: ubuntu-latest
    needs: rename_rar
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Find and extract the zip file matching 'lancenet.net.*.zip'
        run: |
          # Find the file with the pattern 'lancenet.net.*.zip'
          ZIP_FILE=$(find . -name "lancenet.net.*.zip" | head -n 1)
          if [ -n "$ZIP_FILE" ]; then
            echo "Found zip file: $ZIP_FILE"
            # Extract the zip file
            unzip "$ZIP_FILE" -d ./
            # List files to verify extraction
            ls -la
          else
            echo "No matching zip file found."
          fi

      - name: Display 'index.html' content before replacement
        run: cat index.html

      - name: Replace strings in 'index.html'
        uses: thiagodnf/string-replacer@v1.0.2
        with:
          find: '/img/'
          replace: './img/'
          include: 'index.html'  # Apply find and replace only to index.html

      - name: Display 'index.html' content after replacement
        run: cat index.html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    name: Deploy Job
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
