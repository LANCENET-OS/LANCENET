# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build Job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Delete old .rar files
        run: |
          # Delete any existing .rar files from previous runs
          find . -name "*.rar" -exec rm {} +

      - name: Rename the incoming .rar file to 'currentbuild.(thisdate).zip'
        run: |
          # Find the .rar file
          RAR_FILE=$(find . -name "*.rar" | head -n 1)
          echo "Found rar file: $RAR_FILE"
          
          # Generate the new name with the current date
          NEW_NAME="currentbuild.$(date +'%Y%m%d').zip"
          echo "Renaming to: $NEW_NAME"
          
          # Rename the file
          mv "$RAR_FILE" "$NEW_NAME"
          
          # List files to verify the renaming
          ls -la

      - name: Find and extract the zip file matching 'lancenet.net.*.zip'
        run: |
          # Find the file with the pattern 'lancenet.net.*.zip'
          ZIP_FILE=$(find . -name "lancenet.net.*.zip" | head -n 1)
          echo "Found zip file: $ZIP_FILE"
          
          # Extract the zip file
          unzip "$ZIP_FILE" -d ./
          
          # List files to verify extraction
          ls -la

      - name: Display 'index.html' content before replacement
        run: cat index.html

      - name: Replace strings in 'index.html'
        uses: thiagodnf/string-replacer@v1.0.2
        with:
          find: '/img/'
          replace: './img/'
          include: 'index.html'  # Apply find and replace only to index.html

      - name: Display 'index.html' content after replacement
        run: cat index.html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    name: Deploy Job
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
