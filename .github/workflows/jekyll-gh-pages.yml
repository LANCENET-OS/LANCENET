# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Delete the oldest .rar file (if exists)
        run: |
          # Find and delete the oldest .rar file based on modification time
          OLDEST_RAR_FILE=$(find . -name "lancenet.net.*.rar" -type f -printf "%T@ %p\n" | sort -n | head -n 1 | cut -d' ' -f2)
          if [ -n "$OLDEST_RAR_FILE" ]; then
            echo "Deleting oldest .rar file: $OLDEST_RAR_FILE"
            rm "$OLDEST_RAR_FILE"
          else
            echo "No .rar files found to delete."
          fi

      - name: Commit the deletion of old file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Deleted the oldest .rar file" || echo "No old .rar file to delete."

      - name: Rename the newest .rar file to 'currentbuild.(thisdate).zip'
        run: |
          # Find the newest .rar file based on modification time
          NEWEST_RAR_FILE=$(find . -name "lancenet.net.*.rar" -type f -printf "%T@ %p\n" | sort -n | tail -n 1 | cut -d' ' -f2)
          if [ -n "$NEWEST_RAR_FILE" ]; then
            # Get the current date
            CURRENT_DATE=$(date +"%Y%m%d")
            # Rename the file
            NEW_FILE_NAME="currentbuild.$CURRENT_DATE.zip"
            echo "Renaming $NEWEST_RAR_FILE to $NEW_FILE_NAME"
            mv "$NEWEST_RAR_FILE" "$NEW_FILE_NAME"
          else
            echo "No .rar file found to rename."
          fi

      - name: Commit the renamed file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Renamed the newest .rar file to currentbuild.zip" || echo "No .rar file to rename."

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Find and extract the zip file matching 'lancenet.net.*.zip'
        run: |
          # Find the file with the pattern 'lancenet.net.*.zip'
          ZIP_FILE=$(find . -name "lancenet.net.*.zip" | head -n 1)
          if [ -n "$ZIP_FILE" ]; then
            echo "Found zip file: $ZIP_FILE"
            # Extract the zip file
            unzip "$ZIP_FILE" -d ./
            # List files to verify extraction
            ls -la
          else
            echo "No matching zip file found."
          fi

      - name: Display 'index.html' content before replacement
        run: cat index.html

      - name: Replace strings in 'index.html'
        uses: thiagodnf/string-replacer@v1.0.2
        with:
          find: '/img/'
          replace: './img/'
          include: 'index.html'

      - name: Display 'index.html' content after replacement
        run: cat index.html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
