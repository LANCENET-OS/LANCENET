name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # 1) Check out the repository
      - name: Check out the repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all commit history to ensure proper commit count

      # 2) Archive the existing 'lancenet.net.zip' (if any) to an 'archive' folder with a timestamp
      - name: Archive old ZIP
        run: |
          if [ -f "lancenet.net.zip" ]; then
            echo "Existing lancenet.net.zip found. Archiving..."
            mkdir -p archive
            TIMESTAMP=$(date +'%Y%m%d%H%M%S')
            mv lancenet.net.zip "archive/lancenet.net.${TIMESTAMP}.zip"
          else
            echo "No existing lancenet.net.zip to archive."
          fi

      # 3) Find and rename the new 'lancenet.net.*.zip' file to 'lancenet.net.zip'
      - name: Rename new ZIP file
        run: |
          # Find the new file matching the pattern 'lancenet.net.*.zip'
          NEW_FILE=$(find . -type f -name "lancenet.net.*.zip" ! -name "lancenet.net.zip" | head -n 1)
          if [ -n "$NEW_FILE" ]; then
            echo "Found a new file to rename: $NEW_FILE"
            mv "$NEW_FILE" lancenet.net.zip
          else
            echo "No new 'lancenet.net.*.zip' found."
          fi

      # 4) Commit the new/renamed file if present
      - name: Commit new ZIP file (if changed)
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Only attempt to commit if 'lancenet.net.zip' exists and changed
          if [ -f "lancenet.net.zip" ]; then
            git add lancenet.net.zip
            git commit -m "Archive old and rename new ZIP to lancenet.net.zip" || echo "No changes to commit."
            git push origin main
          else
            echo "No lancenet.net.zip to commit."
          fi

      # 5) Increment the SITEVERSION from the stored version file
      - name: Increment SITEVERSION and update version.txt
        id: siteversion
        run: |
          VERSION_FILE="version.txt"
          if [ ! -f "$VERSION_FILE" ]; then
            echo "Error: version.txt not found!" >&2
            exit 1
          fi
          # Read the current version from version.txt
          CURRENT_VERSION=$(cat "$VERSION_FILE")
          echo "Current SITEVERSION: $CURRENT_VERSION"
          # Increment the version by 0.0.1
          NEW_VERSION=$(echo "$CURRENT_VERSION" | awk -F. '{printf "%d.%d.%d\n", $1, $2, $3+1}')
          echo "New SITEVERSION: $NEW_VERSION"
          # Write the new version to version.txt
          echo "$NEW_VERSION" > "$VERSION_FILE"
          # Make the SITEVERSION available for other steps
          echo "SITEVERSION=$NEW_VERSION" >> $GITHUB_ENV

      # 6) Commit the updated version.txt file to the repository
      - name: Commit updated SITEVERSION to version.txt
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "Increment SITEVERSION to ${{ env.SITEVERSION }}" || echo "No changes to commit."
          git push origin main

      # 7) Install unzip
      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      # 8) Extract the ZIP file (if present)
      - name: Extract the zip file 'lancenet.net.zip'
        run: |
          if [ -f "./lancenet.net.zip" ]; then
            echo "Extracting lancenet.net.zip"
            unzip "./lancenet.net.zip" -d ./
            ls -la
          else
            echo "No zip file found to extract."
          fi

      # 9) Replace SITEVERSION in 'index.html'
      - name: Replace SITEVERSION in 'index.html'
        uses: thiagodnf/string-replacer@v1.0.2
        with:
          find: 'SITEVERSION'
          replace: '${{ env.SITEVERSION }}'
          include: 'index.html'

      # 10) Get accurate commit count for UPLOADVERSION
      - name: Get accurate commit count for UPLOADVERSION
        id: commit_count
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          echo "UPLOADVERSION=$COMMIT_COUNT" >> $GITHUB_ENV

      # 11) Replace UPLOADVERSION in 'index.html'
      - name: Replace UPLOADVERSION in 'index.html'
        uses: thiagodnf/string-replacer@v1.0.2
        with:
          find: 'UPLOADVERSION'
          replace: '${{ env.UPLOADVERSION }}'
          include: 'index.html'

      - name: Display 'index.html' content after replacements
        run: cat index.html

      # 12) Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 13) Build with Jekyll
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      # 14) Upload artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      # 15) Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
