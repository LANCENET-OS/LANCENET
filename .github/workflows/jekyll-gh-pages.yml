name: Deploy Jekyll with GitHub Pages dependencies preinstalled
on:
  push:
    branches: ["main"]
  workflow_dispatch:
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
      # Checkout with full commit history to get accurate commit count
      - name: Checkout the repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all commit history to ensure proper commit count

      # Overwrite the old file with the new one, if different
      - name: Overwrite old 'lancenet.net.zip' with new one (force if needed)
        run: |
          # Check if the new file exists
          NEW_FILE=$(find . -name "lancenet.net.zip" | head -n 1)
          if [ -n "$NEW_FILE" ]; then
            echo "Found new file: $NEW_FILE"
            
            # Check if the new file is the same as the existing one
            if [ "$(basename "$NEW_FILE")" != "lancenet.net.zip" ]; then
              echo "Overwriting the old 'lancenet.net.zip' with the new one"
              mv -f "$NEW_FILE" ./lancenet.net.zip
            else
              echo "New file is the same as the existing one, skipping move."
            fi
          else
            echo "No 'lancenet.net.zip' file found."
          fi


      - name: Commit the new file
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add lancenet.net.zip
          git commit -m "Overwrite old lancenet.net.zip with new one" || echo "No changes to commit."

      # Increment the SITEVERSION from the stored version file
      - name: Increment SITEVERSION and update version.txt
        id: siteversion
        run: |
          VERSION_FILE="version.txt"
          if [ ! -f "$VERSION_FILE" ]; then
            echo "Error: version.txt not found!" >&2
            exit 1
          fi

          # Read the current version from version.txt
          CURRENT_VERSION=$(cat "$VERSION_FILE")
          echo "Current SITEVERSION: $CURRENT_VERSION"

          # Increment the version by 0.0.1
          NEW_VERSION=$(echo "$CURRENT_VERSION" | awk -F. '{printf "%d.%d.%d\n", $1, $2, $3+1}')
          echo "New SITEVERSION: $NEW_VERSION"

          # Write the new version to version.txt
          echo "$NEW_VERSION" > "$VERSION_FILE"

          # Make the SITEVERSION available for other steps
          echo "SITEVERSION=$NEW_VERSION" >> $GITHUB_ENV

      # Commit the updated version.txt file to the repository
      - name: Commit updated SITEVERSION to version.txt
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "Increment SITEVERSION to ${{ env.SITEVERSION }}" || echo "No changes to commit."
          git push origin main  # Push the changes to the repository

      - name: Install unzip
        run: sudo apt-get update && sudo apt-get install -y unzip

      - name: Extract the zip file 'lancenet.net.zip'
        run: |
          if [ -f "./lancenet.net.zip" ]; then
            unzip "./lancenet.net.zip" -d ./
            ls -la
          else
            echo "No zip file found to extract."
          fi

      # Replace '/img/' with './img/' in index.html
#      - name: Replace '/img/' with './img/' in 'index.html'
#        uses: thiagodnf/string-replacer@v1.0.2
#        with:
#          find: '/img/'
#          replace: './img/'
#          include: 'index.html'

      # Replace SITEVERSION in 'index.html'
      - name: Replace SITEVERSION in 'index.html'
        uses: thiagodnf/string-replacer@v1.0.2
        with:
          find: 'SITEVERSION'
          replace: '${{ env.SITEVERSION }}'
          include: 'index.html'

      # Get accurate commit count for UPLOADVERSION
      - name: Get accurate commit count for UPLOADVERSION
        id: commit_count
        run: |
          COMMIT_COUNT=$(git rev-list --count HEAD)
          echo "UPLOADVERSION=$COMMIT_COUNT" >> $GITHUB_ENV

      # Replace UPLOADVERSION in 'index.html'
      - name: Replace UPLOADVERSION in 'index.html'
        uses: thiagodnf/string-replacer@v1.0.2
        with:
          find: 'UPLOADVERSION'
          replace: '${{ env.UPLOADVERSION }}'
          include: 'index.html'

      - name: Display 'index.html' content after replacements
        run: cat index.html

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
